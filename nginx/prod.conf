server {
    listen 80;

    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }    
}

server {
  listen 443 ssl;
  root /usr/share/nginx/html;
  error_page 404 =200 /index.html;

  ssl_certificate /etc/letsencrypt/live/lostcities.nickjames.io/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/lostcities.nickjames.io/privkey.pem;
  include /etc/letsencrypt/options-ssl-nginx.conf;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

  location / {
    proxy_pass http://client:80;
    proxy_redirect    default;
    proxy_set_header  Host $host;
    proxy_set_header  X-Real-IP $remote_addr;
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Host $server_name;
  }

  location ~ /api {
    rewrite ^/api(.*) /$1 break;
    proxy_pass        http://api:5000;
    proxy_http_version 1.1;
    proxy_set_header  Host $host;
    proxy_set_header  X-Real-IP $remote_addr;
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Host $server_name;
  }

  location /socket.io {
    proxy_buffering off;
    proxy_pass        http://api:5000/socket.io;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade; # needed to handle websocket connection. Response 101 switch protocol
    proxy_set_header Connection "upgrade"; # needed to handle websocket connection. Response 101 switch protocol
    proxy_set_header  Host $host;
  }

}
